# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.tex.latex':
  'Figure':
    'prefix': 'fig'
    'body': """
      \\\\begin{figure}[h]
        \\\\centering
        \\\\includegraphics[width=1.0\\\\textwidth]{$1} % Asset location
        \\\\caption{$2}
        \\\\label{fig:$3}
      \\\\end{figure}
      $4
      """

'.source.js':
  'React Class':
    'prefix': 'rcc'
    'body': """
      import React from 'react'

      export default class $1 extends React.Component{

        render() {
          return (
            <div>$2</div>
          );
        }

      };
      """

  'React Component':
    'prefix': 'rcomp'
    'body': """
      import React from 'react'

      const $1 = React.createClass({

        render() {
          return (
            <div>$2</div>
          );
        }

      });

      export default $1;
      """
  'React Reducer':
    'prefix': 'rreducer'
    'body': """
      const initialState = {
        $1
      }

      export default (state = initialState, action = {}) => {
        switch(action.type) {
          case '$2':
          return Object.assign({}, state, {
            $3
          });

          default: return state;
        }
      }
      """
  'Object assign':
    'prefix': 'Oass'
    'body': """
      Object.assign({}, $1, {
        $2
      })
      """
